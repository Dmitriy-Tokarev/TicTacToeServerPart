TicTacToe Web API Server Part 
version: 1.0.0

Данный проект был создан с целью демонстрации собственных навыков разработки.

Сам проект представляет серверную часть игры «крестики-нолики 3*3», реализующий RESTful API.

Во время разработки использовались следующие инструменты: ASP.NET core (паттерн MVC), Entity Framework Core, 
Dependency injection, Swagger, а для аутентификации пользователя применяется web-токен JSON (JWT).

В структуру приложения входят:
    
    - 3-и контроллера, каждый из которых отвечает за определенную функциональную часть:
        1. AuthController – отвечает за регистрацию нового пользователя и выдачу web-токена;
        2. InformationController – отвечает за взаимодействие с БД, а именно: вывод всех пользователей, 
        поиск пользователя по Id, изменение пользовательских данных, удаление игрока и поиск доступных игровых сессий;
        3. InGameController – отвечает за реализацию внутриигровой логики: создание игровой сессии, 
        присоединение к игре из списка доступных игры или к определенной сессии по ее Id и 
        обрабатывает результаты хода игрока (проверка выигрышных комбинаций).
    
    - 3-и модели, каждая из которых характеризуют определенную сущность:
        1. InGameLogicModel – сущность, характеризующая игровую сессию, которая имеет следующие свойства: 
        Id – уникальный идентификатор игровой сессии; FirstPlayerId/SecondPlayerId – идентификационный номер 
        первого/второго игрока; WinnerId - идентификационный номер победителя в данной игровой сессии; 
        OnLine – статус, означающий готовность к принятию игроков и старта игровой сессии; 
        PublicSearchType – статус, означающий общедоступный поиск данной игровой сессии 
        (значение поля true – сессия доступна из общего поиска, false – доступна только по Id).
        2. PlayerModel – сущность, характеризующая игрока, которая имеет следующие свойства: 
        Id – уникальный идентификатор игрока; Name – имя/псевдоним игрока; PhoneNumber – номер телефона игрока;
        RegistrateDate – дата регистрации игрока; Scores – очки игрока (зачисляются за победу); 
        LoginModelId – id указывающий на данные для аутентификации пользователя.
        Данная модель имеет связь с сущностью LoginModel по первичному ключу Id.
        3. LoginModel – сущность, характеризующая данные игрока для аутентификации. 
        Формируется и присваивается игроку при регистрации. 
        Ссылка на данную сущность находится в свойстве LoginModel сущности PlayerModel. 
        Имеет следующие свойства: Id – уникальный идентификатор аутентификационных данных игрока; 
        EmailAddress – электронная почта игрока; Password – пароль от аккаунта игрока.
    
    - TicTacToeContext – контекст для работы с БД (Microsoft SQL Server (LocalDb)).

Преимущества данного проекта:
    - имеет простую монолитную архитектуру;
    - легко добавляется/изменяется/расширяется имеющийся функционал;
    - имеет аутентификацию с помощью web-токена;
    - для отладки реализован интерфейс Swagger;
    - используются современные инструменты разработки.

Недостатки данного проекта:
    - web-токен имеет только Access-токен, Refresh-токен не был реализован;
    - отсутствует авторизация (ролевая модель admin/user);
    - не реализована функция логирования данных.

Данные недостатки будут исправлены в последующих релизах.

